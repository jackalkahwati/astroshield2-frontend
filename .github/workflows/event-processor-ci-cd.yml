name: AstroShield Event Processor CI/CD

on:
  push:
    branches: [main]
    paths:
      - 'app/**'
      - 'Dockerfile.event-processor'
      - 'docker-compose.event-processor.yml'
      - 'requirements-event-processor.txt'
      - '.github/workflows/event-processor-ci-cd.yml'
  pull_request:
    branches: [main]
    paths:
      - 'app/**'
      - 'Dockerfile.event-processor'
      - 'docker-compose.event-processor.yml'
      - 'requirements-event-processor.txt'
  workflow_dispatch:

jobs:
  # Run tests for the event processor
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          cache: 'pip'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-event-processor.txt
          pip install pytest pytest-asyncio pytest-cov

      - name: Run tests
        run: |
          python -m pytest tests/test_event_processor.py -v

  # Build and push Docker image
  build:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push event processor image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile.event-processor
          push: true
          tags: |
            ghcr.io/${{ github.repository }}/event-processor:latest
            ghcr.io/${{ github.repository }}/event-processor:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  # Deploy to staging environment
  deploy-staging:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
    environment: staging
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Copy deployment files to staging server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.STAGING_HOST }}
          username: ${{ secrets.STAGING_USERNAME }}
          key: ${{ secrets.STAGING_SSH_KEY }}
          source: "docker-compose.event-processor.yml,.env.production"
          target: "~/asttroshield"
          
      - name: Deploy to staging
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.STAGING_HOST }}
          username: ${{ secrets.STAGING_USERNAME }}
          key: ${{ secrets.STAGING_SSH_KEY }}
          script: |
            cd ~/asttroshield
            docker login ghcr.io -u ${{ github.actor }} -p ${{ secrets.GITHUB_TOKEN }}
            docker-compose -f docker-compose.event-processor.yml pull
            docker-compose -f docker-compose.event-processor.yml up -d
            
  # Deploy to production (manual approval required)
  deploy-production:
    needs: deploy-staging
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
    environment:
      name: production
      url: https://asttroshield.com
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Copy deployment files to production server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.PRODUCTION_HOST }}
          username: ${{ secrets.PRODUCTION_USERNAME }}
          key: ${{ secrets.PRODUCTION_SSH_KEY }}
          source: "docker-compose.event-processor.yml,.env.production"
          target: "~/asttroshield"
          
      - name: Deploy to production
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.PRODUCTION_HOST }}
          username: ${{ secrets.PRODUCTION_USERNAME }}
          key: ${{ secrets.PRODUCTION_SSH_KEY }}
          script: |
            cd ~/asttroshield
            docker login ghcr.io -u ${{ github.actor }} -p ${{ secrets.GITHUB_TOKEN }}
            docker-compose -f docker-compose.event-processor.yml pull
            docker-compose -f docker-compose.event-processor.yml up -d 